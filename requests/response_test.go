package requests

import (
	"bytes"
	"testing"

	"github.com/docker/parsec/client/operations/asym_sign"
	"github.com/docker/parsec/client/operations/ping"
	"gotest.tools/assert"
)

var expectedPingResp = []byte{
	0x10, 0xa7, 0xc0, 0x5e, 0x15, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}
var expectedSignResp = []byte{
	0x10, 0xa7, 0xc0, 0x5e, 0x15, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x0a, 0x04, 0x01, 0x02, 0x03, 0x04}
var expectedSignature = []byte{0x01, 0x02, 0x03, 0x04}

func TestNewResponsePing(t *testing.T) {
	p := &ping.ResultPingProto{}
	_, err := NewResponse(bytes.NewBuffer(expectedPingResp), p)
	assert.NilError(t, err)
}

func TestNewResponseSign(t *testing.T) {
	p := &asym_sign.ResultAsymmetricSignProto{}
	_, err := NewResponse(bytes.NewBuffer(expectedSignResp), p)
	assert.DeepEqual(t, p.Signature, expectedSignature)
	assert.NilError(t, err)
}
